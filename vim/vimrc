""" directory for plugins
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'tomtom/tcomment_vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'itchyny/lightline.vim'
Plug 'sheerun/vim-polyglot'
Plug 'editorconfig/editorconfig-vim'
Plug 'vim-syntastic/syntastic'
" Plug 'godlygeek/tabular'
" Plug 'nightsense/carbonized'
" Plug 'godlygeek/csapprox'
Plug 'lifepillar/vim-solarized8'
Plug 'majutsushi/tagbar'
Plug 'mattn/emmet-vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
" Plug 'terryma/vim-multiple-cursors'

call plug#end()

"""""""""""""""
"  PLUGIN LIST
"""""""""""""""
" nerdtree
" tcomment
" ctrlp
" lightline
" polyglot
" editorconfig
" tagbar
" emmet
" ultisnips
" solarized8 colorscheme
" multip cursors


""" KEYBOARD MAPPINGS

" sets the mapleader
let mapleader = ","

" search all occurences then change
vmap <Leader>g *:%s/<C-R>//
map <Leader>g *:%s/<C-R>//

" sets <ESC> to jk
inoremap jk <ESC>

" make new lines with Enter in normal mode
map <CR> o<ESC>k



""" PLUGIN SETTINGS

" tcomment
noremap <Leader>cc :TComment<CR>


" ctrlp
" Leader F is for file related mapp√Ængs (open, browse...) 
nnoremap <silent> <Leader>f :CtrlP<CR>
nnoremap <silent> <Leader>fm :CtrlPMRU<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ctrl B for buffer related mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent> <Leader>b :CtrlPBuffer<CR> " cycle between buffer
nnoremap <silent> <Leader>bb :bn<CR> "create (N)ew buffer
nnoremap <silent> <Leader>bd :bdelete<CR> "(D)elete the current buffer
nnoremap <silent> <Leader>bu :bunload<CR> "(U)nload the current buffer
nnoremap <silent> <Leader>bl :setnomodifiable<CR> " (L)ock the current buffer"

" nerdtree
map <C-n> :NERDTreeToggle<CR>
" autocmd VimEnter * NERDTree




" lightline

" let g:lightline = { 'colorscheme': 'solarized8', }
set laststatus=2                                                "vim-lightline
set noshowmode       


" polyglot


" editorconfig


" syntastic
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
"
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0
" let g:syntastic_python_checkers = ['flake8', 'python']
  

" tagbar with exuberant ctags
nmap <C-b> :TagbarToggle<CR>
let g:tagbar_width = 60
"let g:tagbar_ctags_bin = '/usr/bin/ctags'


" ULTISNIPS
set nocompatible
filetype plugin indent on
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" VIM MULTIPLE CURSORS



""" GENERAL CONFIGURATION

" set font
" set guifont=Dejavu\ Sans\ Mono:h12

" show line numbers
set number

" highlight current line
set cursorline
hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white

" colorscheme
set background=dark
syntax enable
set t_Co=256
" colorscheme carbonized-dark
colorscheme solarized8

" tabs and spaces
set tabstop=4 " width of tab is set to 4
set shiftwidth=4 " indents will have a width of 4
set softtabstop=4 " sets the number of columns for a tab
set expandtab " expand tabs to spaces

" make backspaces delete sensibly
set backspace=indent,eol,start

" autosaves buffer when switching between buffer
set autowrite

" configures how invisible characters are displayed
set listchars=tab:>.,trail:.,extends:#,nbsp:.

" ignores cases when search pattern is all lowercase
" set smartcase
" set ignorecase

" stop spitting vim backup/swap file all over
set backupdir=~/.vim/tmp/                   " for the backup files
set directory=~/.vim/tmp/                   " for the swap files

" allows sudo to write the file within vim
cmap w!! %!sudo tee > /dev/null %
